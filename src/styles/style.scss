:root {
  // colors
  --eigengrau: #16161d;
  --blue: #3c80e0;
  --blue-50: #3c80e080;
  --white: #fff;
  --white-10: #ffffff20;

  // animations
  --animation-time: 1.5s;
}

html,
body,
main {
  min-height: 100%;
}

body {
  font-size: 16px;
  color: var(--white);
  font-family: sans-serif;
  background-color: var(--eigengrau);
}

main {
  display: grid;
  place-content: center;
  overflow: hidden;
  padding: 1rem 2rem;
}

h1 {
  text-align: center;
  margin: 0 0 1rem 0;
}

// Screen readers only (accessibility)
.sr-only {
  width: 0;
  height: 0;
  opacity: 0;
}

.form {
  gap: 2rem;
  display: grid;
  place-content: center;
  margin-bottom: 2rem;

  label {
    text-align: center;
  }

  .input {
    font-size: 2rem;
    min-width: 40ch;
    text-align: center;
  }

  .buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }

  button {
    border: 2px solid var(--white);
    outline-color: transparent;
    cursor: pointer;
    border-radius: 9vw;
    color: var(--white);
    padding: 1rem 3rem;
    font-size: 1.5rem;
    background-color: var(--blue);
    transition: 0.15s all;

    &[type="reset"] {
      background-color: var(--eigengrau);
      color: var(--blue);
      border-color: var(--blue);

      &:hover {
        background-color: var(--blue);
        color: var(--white);
        border-color: var(--blue);
      }
    }

    &:hover {
      background-color: var(--eigengrau);
      color: var(--blue);
      border-color: var(--blue);
    }
    &:focus-visible {
      outline: 0.2rem solid var(--white);
    }
    &:active {
      filter: brightness(2);
    }
    &:disabled {
      opacity: 0.5;
      box-shadow: none;
      cursor: not-allowed;
    }
  }
}

.result {
  background: radial-gradient(var(--blue) 0%, var(--eigengrau) 10%);
  background-position: center;
  background-repeat: no-repeat;
  background-size: 1% 1%;
  border-radius: 99vw;
  width: 30rem;
  font-size: 2rem;
  height: 30rem;
  aspect-ratio: 1;
  display: grid;
  place-items: center;
  animation-duration: var(--animation-time);
  border: 3px solid var(--blue);
  margin-inline: auto;
  overflow: hidden;

  &.animate {
    animation: ripple var(--animation-time);
  }

  &.slide-inward {
    .letter {
      opacity: 0;
      transition-duration: 2s;

      &.show {
        animation: dissolve var(--animation-time) forwards;
      }
    }
  }

  .letter {
    position: absolute;
    opacity: 0.1;
    pointer-events: none;
    transition: opacity 0.15s, transform 0.3s ease-in;

    &.show {
      opacity: 1;
      text-shadow: 1px 1px 10px var(--blue);
    }

    @for $i from 0 through 27 {
      &:nth-child(#{$i}) {
        --angle: calc(360deg / 26 * #{$i});
        // Note that it is important that the rotate comes before translate
        transform: rotate(var(--angle)) translateY(-14rem);
      }
    }
  }

  svg {
    // width: 100%;
    // height: 100%;

    > * {
      stroke-dasharray: 1000;
      stroke-dashoffset: 1000;
      stroke: var(--white);
      position: absolute;
      animation: drawLine 2s ease forwards;
    }
  }
}

@keyframes ripple {
  50% {
    background-size: 500% 500%;
  }
}

@keyframes dissolve {
  100% {
    opacity: 0;
    transform: rotate(var(--angle)) translateY(0);
  }
}

@keyframes drawLine {
  to {
    stroke-dashoffset: 0;
  }
}
